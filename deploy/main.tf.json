{
  "provider": {
    "google": [
      {
        "project": "sano-332607",
        "region": "europe-central2",
        "zone": "europe-central2-a"
      }
    ]
  },
  "module": {
    "flower-vpc": {
      "source": "terraform-google-modules/network/google",
      "project_id": "sano-332607",
      "network_name": "flower-server-vpc",
      "routing_mode": "GLOBAL",
      "auto_create_subnetworks": true,
      "subnets": [
        {
          "subnet_name": "flower-subnet",
          "subnet_ip": "10.10.10.0/24",
          "subnet_region": "europe-central2"
        }
      ],
      "routes": [
        {
          "name": "egress2-internet",
          "description": "route through IGW to access internet",
          "destination_range": "0.0.0.0/0",
          "tags": "egress2-inet",
          "next_hop_internet": "true"
        }
      ]
    }
  },
  "resource": {
    "google_compute_firewall": {
      "firewall-server": {
        "name": "firewall-server",
        "network": "default",
        "allow": {
          "protocol": "tcp",
          "ports": [
            "80",
            "8080",
            "443",
            "5000-5999",
            "6000-6999",
            "7000-7999"
          ]
        }
      }
    },
    "google_compute_address": {
      "flower-server": {
        "name": "flower-server"
      }
    },
    "google_compute_instance": {
      "server": {
        "name": "server",
        "machine_type": "e2-medium",
        "zone": "europe-central2-a",
        "boot_disk": {
          "initialize_params": {
            "image": "ubuntu-os-cloud/ubuntu-1804-lts"
          }
        },
        "network_interface": {
          "network": "default",
          "access_config": {
            "nat_ip": "${google_compute_address.flower-server.address}"
          }
        },
        "metadata_startup_script": "#!/bin/bash\n\n## For debugging\n# redirect stdout/stderr to a file\nexec &> logs.out\necho 'Simple Web Server for testing the deployment'\nsudo apt update -y\nsudo apt install apache2 -y\nsudo systemctl start apache2\necho '<h1>Greetings!</h1>' | sudo tee /var/www/html/index.html\n\necho 'Setup Miniconda environment'\nsudo wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh\nsudo bash miniconda.sh -b -p miniconda\nsudo rm miniconda.sh\nexport PATH=/miniconda/bin:$PATH > ~/.bashrc\nconda init bash\nsource ~/.bashrc\nconda create -y -n pygrid python=3.7\nconda activate pygrid\n\necho 'Install poetry...'\npip install poetry\n\npip install tensorflow\n\necho 'Install GCC'\nsudo apt-get install zip unzip -y\nsudo apt-get install python3-dev -y\nsudo apt-get install libevent-dev -y\nsudo apt-get install gcc -y\n\necho \"Setting environment variables\"\nexport CLOUD_PROVIDER=gcp\n\necho \"Exporting GCP Configs\"\nexport project_id=chatbot-94280,\nexport REGION=europe-central2,\nexport zone=europe-central2-a,\nexport machine_type=e2-medium,\n\necho 'Cloning flower'\ngit clone https://github.com/pszemkor/flower && cd /flower/\ngit checkout main\n\necho 'Installing deps'\npoetry install\n\npoetry run python3 /flower/examples/advanced_tensorflow/server.py"
}
    }
  },
  "output": {
    "instance_0_endpoint": {
      "value": "${google_compute_address.flower-server.address}"
    }
  }
}
